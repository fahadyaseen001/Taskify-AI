name: Cleanup Environments

on:
  # Run manually from the Actions tab
  workflow_dispatch:
    
  # Run after each deployment
  deployment_status:
    types: [success]

jobs:
  cleanup:
    name: Cleanup Environments
    runs-on: ubuntu-latest
    
    steps:
      - name: Delete Environments
        uses: actions/github-script@v7
        with:
          script: |
            const environments = await github.rest.repos.getAllEnvironments({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            console.log(`Found ${environments.data.environments.length} environments`);
            
            for (const env of environments.data.environments) {
              try {
                await github.rest.repos.deleteEnvironment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  environment_name: env.name
                });
                console.log(`Successfully deleted environment: ${env.name}`);
              } catch (error) {
                console.error(`Error deleting environment ${env.name}:`, error);
              }
            }
            
            console.log('Environment cleanup completed');

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Environment Cleanup Failed',
              body: 'The environment cleanup workflow has failed. Please check the workflow logs for more details.'
            });
            console.log('Created issue #' + issue.data.number); 